// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuarios {
  id       String @id @default(uuid())
  nome     String
  email    String
  cnpj     String @unique
  telefone String
  cep      String
  rua      String
  numero   String
  cidade   String
  estado   String
  senha    String

  data_criacao   DateTime @default(now())
  data_alteracao DateTime @updatedAt

  @@map("usuarios")
}

model Grupos {
  id   String @id @default(uuid())
  nome String

  //data_criacao   DateTime @default(now()) @db.Timestamptz()
  data_criacao   DateTime @default(now())
  //data_alteracao DateTime @updatedAt @db.Timestamptz()
  data_alteracao DateTime @updatedAt

  produtos Produtos[]

  @@map("grupos")
}

model Pedidos {
  id        String @id @default(uuid())
  nome      String
  descricao String
  preco     String

  //data_criacao   DateTime @default(now()) @db.Timestamptz()
  data_criacao   DateTime @default(now())
  //data_alteracao DateTime @updatedAt @db.Timestamptz()
  data_alteracao DateTime @updatedAt

  @@map("pedidos")
}

model Produtos {
  id        String @id @default(uuid())
  nome      String
  descricao String
  preco     String

  grupos   Grupos? @relation(fields: [idGrupos], references: [id])
  idGrupos String?

  //data_criacao   DateTime @default(now()) @db.Timestamptz()
  data_criacao   DateTime @default(now())
  //data_alteracao DateTime @updatedAt @db.Timestamptz()
  data_alteracao DateTime @updatedAt

  @@map("produtos")
}
